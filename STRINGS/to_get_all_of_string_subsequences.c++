You are given a string 'STR' containing lowercase English letters from a to z inclusive. Your task is to find all non-empty possible subsequences of 'STR'.

A Subsequence of a string is the one which is generated by deleting 0 or more letters from the string and keeping the rest of the letters in the same order.
Detailed explanation ( Input/output format, Notes, Images )
Constraints:
1 <= T <= 10 
1 <=  |STR| <= 16

Where |STR| represents the length of the string 'STR'.

Time Limit: 1 sec
Sample Input 1:
1 
abc
Sample Output 1:
a ab abc ac b bc c
Explanation of sample input 1:
All possible subsequences of abc are :  
“a” , “b” , “c” , “ab” , “bc” , “ac”, “abc”


IT IS JUST SIMILAR TO HOW WE DONE TO GET ALL OF THE SUBARRAY MEANS TO FIND POWER SET OF A GIVEN SET 




 #include <bits/stdc++.h> 

void solve(vector<string>&ans,string output,string s,int index){
    if(index>=s.length()){
        if(output.length()>0){
            ans.push_back(output);
        }
        return;
    }

    //exclude
    solve(ans,output,s,index+1);

    //include
    output.push_back(s[index]);
    solve(ans,output,s,index+1);
}
vector<string> subsequences(string str){
	
	// Write your code here
    vector<string>ans;
    string output="";
    solve(ans,output,str,0);
    return ans;
	
}
