
Given two sorted arrays array1 and array2 of size m and n respectively. Find the median of the two sorted arrays.

Example 1:

Input:
m = 3, n = 4
array1[] = {1,5,9}
array2[] = {2,3,6,7}
Output: 5
Explanation: The middle element for
{1,2,3,5,6,7,9} is 5
Example 2:

Input:
m = 2, n = 4
array1[] = {4,6}
array2[] = {1,2,3,5}
Output: 3.5




1:mergin both arrays and then finding median

class Solution{
    public:
    double solve(vector<int>&v){
            int n=v.size();
		    sort(v.begin(),v.end());
		    double index;
		    double ans;
		    if(n&1){
		       ans=v[(n)/2];
		    }
		    
		    else{
		        double value1=v[n/2];
    		    double value2=v[(n/2)-1];
    		    ans=(value1+value2)/2;
		    }
		    return ans;
    }
    double MedianOfArrays(vector<int>& array1, vector<int>& array2)
    {
        // Your code goes here
        int n=array1.size();
        int m=array2.size();
        vector<int>mergedArray(n+m);
        int i=n-1;
        int j=0;
        
        while(i>=0 && j<m){
            if(array1[i]>array2[j]){
                swap(array1[i--],array2[j++]);
            }
            else{
                break;
            }
        }
        
        for(int i=0;i<n+m;i++){
            if(i<n){
                mergedArray[i]=array1[i];
            }
            else if(i<n+m){
                mergedArray[i]=array2[i-n];
            }
        }
        
        double ans=solve(mergedArray);
        return ans;
        
        
    
    }
};

t.c:-O((n+m)log(n+m)) s.c:-O(n+m)
  
gives tle



2:optimized code
